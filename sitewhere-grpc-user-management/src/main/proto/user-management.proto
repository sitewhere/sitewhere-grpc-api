syntax = "proto3";

package com.sitewhere.grpc.service;

option java_multiple_files = true;
option java_package = "com.sitewhere.grpc.service";
option java_outer_classname = "UserServices";

import "user-model.proto";

// User management APIs.
service UserManagement {

	// #############
	// ### USERS ###
	// #############

	// Create a new user.
	rpc CreateUser (GCreateUserRequest) returns (GCreateUserResponse) {}

	// Get access token.
	rpc GetAccessToken (GGetAccessTokenRequest) returns (GGetAccessTokenResponse) {}
	
	// Get public key for verifying token.
	rpc GetPublicKey (GGetPublicKeyRequest) returns (GGetPublicKeyResponse) {}

	// Update an existing user.
	rpc UpdateUser (GUpdateUserRequest) returns (GUpdateUserResponse) {}

	// Get user by username.
	rpc GetUserByUsername (GGetUserByUsernameRequest) returns (GGetUserByUsernameResponse) {}

	// List users that meet criteria.
	rpc ListUsers (GListUsersRequest) returns (GListUsersResponse) {}

	// Delete an existing user.
	rpc DeleteUser (GDeleteUserRequest) returns (GDeleteUserResponse) {}

	// ###########################
	// ### GRANTED AUTHORITIES ###
	// ###########################

	// Create a granted authority.
	rpc CreateGrantedAuthority (GCreateGrantedAuthorityRequest) returns (GCreateGrantedAuthorityResponse) {}

	// Get granted authority by name.
	rpc GetGrantedAuthorityByName (GGetGrantedAuthorityByNameRequest) returns (GGetGrantedAuthorityByNameResponse) {}

	// Update an existing granted authority.
	rpc UpdateGrantedAuthority (GUpdateGrantedAuthorityRequest) returns (GUpdateGrantedAuthorityResponse) {}

	// List granted authorities that match criteria.
	rpc ListGrantedAuthorities (GListGrantedAuthoritiesRequest) returns (GListGrantedAuthoritiesResponse) {}

	// Delete an existing granted authority.
	rpc DeleteGrantedAuthority (GDeleteGrantedAuthorityRequest) returns (GDeleteGrantedAuthorityResponse) {}

	// ###########################
    // ### Roles ###
    // ###########################

    // Create a role.
    rpc CreateRole (GCreateRoleRequest) returns (GCreateRoleResponse) {}

    // Get role by name.
    rpc GetRoleByName (GGetRoleByNameRequest) returns (GGetRoleByNameResponse) {}

    // Update an existing role.
    rpc UpdateRole (GUpdateRoleRequest) returns (GUpdateRoleResponse) {}

    // List roles that match criteria.
    rpc ListRoles (GListRolesRequest) returns (GListRolesResponse) {}

    // Delete an existing role.
    rpc DeleteRole (GDeleteRoleRequest) returns (GDeleteRoleResponse) {}

    // Get granted roles for a user.
    rpc GetRolesForUser (GGetRolesRequest) returns (GGetRolesResponse) {}

    // Add granted authorities for a user.
    rpc AddRolesForUser (GAddRolesRequest) returns (GAddRolesResponse) {}

    // Remove granted authorities for a user.
    rpc RemoveRolesForUser (GRemoveRolesRequest) returns (GRemoveRolesResponse) {}
}

// #############
// ### USERS ###
// #############

// Request for creating a user.
message GCreateUserRequest {
	com.sitewhere.grpc.model.GUserCreateRequest request = 1;
}

// Response from creating a user.
message GCreateUserResponse {
	com.sitewhere.grpc.model.GUser user = 1;
}

// Request for getting an access token.
message GGetAccessTokenRequest {
	string username = 1;
	string password = 2;
}

// Response for authentication.
message GGetAccessTokenResponse {
	string token = 1;
}

// Request for getting public key.
message GGetPublicKeyRequest {
}

// Response getting public key.
message GGetPublicKeyResponse {
	string key = 1;
}

// Request for updating a user.
message GUpdateUserRequest {
	string username = 1;
	com.sitewhere.grpc.model.GUserCreateRequest request = 2;
	bool encodePassword = 3;
}

// Response for updating a user.
message GUpdateUserResponse {
	com.sitewhere.grpc.model.GUser user = 1;
}

// Request for getting user by username.
message GGetUserByUsernameRequest {
	string username = 1;
}

// Response for getting user by username.
message GGetUserByUsernameResponse {
	com.sitewhere.grpc.model.GUser user = 1;
}

// Request for listing users that meet criteria.
message GListUsersRequest {
	com.sitewhere.grpc.model.GUserSearchCriteria criteria = 1;
}

// Response for listing users that meet criteria.
message GListUsersResponse {
	com.sitewhere.grpc.model.GUserSearchResults results = 1;
}

// Request for deleting a user.
message GDeleteUserRequest {
	string username = 1;
}

// Response for deleting a user.
message GDeleteUserResponse {
	com.sitewhere.grpc.model.GUser user = 1;
}

// ###########################
// ### GRANTED AUTHORITIES ###
// ###########################

// Request for creating a granted authority.
message GCreateGrantedAuthorityRequest {
	com.sitewhere.grpc.model.GGrantedAuthorityCreateRequest request = 1;
}

// Response for creating a granted authority.
message GCreateGrantedAuthorityResponse {
	com.sitewhere.grpc.model.GGrantedAuthority authority = 1;
}

// Request for getting a granted authority by name.
message GGetGrantedAuthorityByNameRequest {
	string name = 1;
}

// Response for getting a granted authority by name.
message GGetGrantedAuthorityByNameResponse {
	com.sitewhere.grpc.model.GGrantedAuthority authority = 1;
}

// Request for updating a granted authority.
message GUpdateGrantedAuthorityRequest {
	string name = 1;
	com.sitewhere.grpc.model.GGrantedAuthorityCreateRequest request = 2;
}

// Response for updating a granted authority.
message GUpdateGrantedAuthorityResponse {
	com.sitewhere.grpc.model.GGrantedAuthority authority = 1;
}

// Request for listing authorities by critieria.
message GListGrantedAuthoritiesRequest {
	com.sitewhere.grpc.model.GGrantedAuthoritySearchCriteria criteria = 1;
}

// Response for listing authorities by critieria.
message GListGrantedAuthoritiesResponse {
	com.sitewhere.grpc.model.GGrantedAuthoritySearchResults results = 1;
}

// Request for deleting a granted authority.
message GDeleteGrantedAuthorityRequest {
	string name = 1;
}

// Response for deleting a granted authority.
message GDeleteGrantedAuthorityResponse {
	com.sitewhere.grpc.model.GGrantedAuthority authority = 1;
}

// ###########################
// ### Roles ###
// ###########################

// Request for creating a Role.
message GCreateRoleRequest {
	com.sitewhere.grpc.model.GRoleCreateRequest request = 1;
}

// Response for creating a granted authority.
message GCreateRoleResponse {
	com.sitewhere.grpc.model.GRole role = 1;
}

// Request for getting a role by name.
message GGetRoleByNameRequest {
	string name = 1;
}

// Response for getting a granted authority by name.
message GGetRoleByNameResponse {
	com.sitewhere.grpc.model.GRole role = 1;
}

// Request for updating a role.
message GUpdateRoleRequest {
	string name = 1;
	com.sitewhere.grpc.model.GRoleCreateRequest request = 2;
}

// Response for updating a granted authority.
message GUpdateRoleResponse {
	com.sitewhere.grpc.model.GRole authority = 1;
}

// Request for listing authorities by critieria.
message GListRolesRequest {
	com.sitewhere.grpc.model.GRoleSearchCriteria criteria = 1;
}

// Response for listing roles by critieria.
message GListRolesResponse {
	com.sitewhere.grpc.model.GRoleSearchResults results = 1;
}

// Request for deleting a role.
message GDeleteRoleRequest {
	string name = 1;
}

// Response for deleting a role.
message GDeleteRoleResponse {
	com.sitewhere.grpc.model.GRole role = 1;
}

// Request for roles for a user.
message GGetRolesRequest {
	string username = 1;
}

// Response for getting roles for a user.
message GGetRolesResponse {
	repeated com.sitewhere.grpc.model.GRole roles = 1;
}

// Request for adding roles for a user.
message GAddRolesRequest {
	string username = 1;
	repeated string roles = 2;
}

// Response for adding roles for a user.
message GAddRolesResponse {
	repeated com.sitewhere.grpc.model.GRole roles = 1;
}

// Request for removing roles for a user.
message GRemoveRolesRequest {
	string username = 1;
	repeated string roles = 2;
}

// Response for removing roles for a user.
message GRemoveRolesResponse {
	repeated com.sitewhere.grpc.model.GRole roles = 1;
}