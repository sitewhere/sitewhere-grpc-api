syntax = "proto3";

package com.sitewhere.grpc.service;

option java_multiple_files = true;
option java_package = "com.sitewhere.grpc.service";
option java_outer_classname = "DeviceStateServices";

import "device-state-model.proto";
import "sitewhere-common.proto";

// Device state APIs.
service DeviceState {

	// ####################
	// ### DEVICE STATE ###
	// ####################
	
	// Create new device state.
	rpc CreateDeviceState (GCreateDeviceStateRequest) returns (GCreateDeviceStateResponse) {}
		
	// Get device state by id.
	rpc GetDeviceState (GGetDeviceStateRequest) returns (GGetDeviceStateResponse) {}
			
	// Get device state by device assignment.
	rpc GetDeviceStateByAssignment (GGetDeviceStateByAssignmentRequest) returns (GGetDeviceStateByAssignmentResponse) {}
				
	// Get device states by device.
	rpc GetDeviceStatesByDevice (GGetDeviceStatesByDeviceRequest) returns (GGetDeviceStatesByDeviceResponse) {}
	
	// Search for device states that meet criteria.
	rpc SearchDeviceStates (GSearchDeviceStatesRequest) returns (GSearchDeviceStatesResponse) {}
	
	// Update existing device state.
	rpc UpdateDeviceState (GUpdateDeviceStateRequest) returns (GUpdateDeviceStateResponse) {}
	
	// Merge events into device state.
	rpc MergeDeviceState (GMergeDeviceStateRequest) returns (GMergeDeviceStateResponse) {}
	
	// Delete existing device state.
	rpc DeleteDeviceState (GDeleteDeviceStateRequest) returns (GDeleteDeviceStateResponse) {}
}

// ####################
// ### DEVICE STATE ###
// ####################

// Request for creating device state.
message GCreateDeviceStateRequest {
	com.sitewhere.grpc.model.GDeviceStateCreateRequest request = 1;
}

// Response from creating device state.
message GCreateDeviceStateResponse {
	com.sitewhere.grpc.model.GDeviceState deviceState = 1;
}
	
// Request for getting device state by id.
message GGetDeviceStateRequest {
	com.sitewhere.grpc.model.GUUID id = 1;
}
	
// Response for getting device state by id.
message GGetDeviceStateResponse {
	com.sitewhere.grpc.model.GDeviceState deviceState = 1;
}
		
// Request for getting device state by device assignment.
message GGetDeviceStateByAssignmentRequest {
	com.sitewhere.grpc.model.GUUID deviceAssignmentId = 1;
}
	
// Response for getting device state by device assignment.
message GGetDeviceStateByAssignmentResponse {
	com.sitewhere.grpc.model.GDeviceState deviceState = 1;
}
		
// Request for getting device states by device.
message GGetDeviceStatesByDeviceRequest {
	com.sitewhere.grpc.model.GUUID deviceId = 1;
}
	
// Response for getting device states by device.
message GGetDeviceStatesByDeviceResponse {
	repeated com.sitewhere.grpc.model.GDeviceState deviceStates = 1;
}
	
// Request for searching for device states that meet criteria.
message GSearchDeviceStatesRequest {
	com.sitewhere.grpc.model.GDeviceStateSearchCriteria criteria = 1;
}
	
// Response for searching for device states that meet criteria.
message GSearchDeviceStatesResponse {
	com.sitewhere.grpc.model.GDeviceStateSearchResults results = 1;
}
	
// Request for updating device state.
message GUpdateDeviceStateRequest {
	com.sitewhere.grpc.model.GUUID id = 1;
	com.sitewhere.grpc.model.GDeviceStateCreateRequest request = 2;
}
	
// Response for updating device state.
message GUpdateDeviceStateResponse {
	com.sitewhere.grpc.model.GDeviceState deviceState = 1;
}
	
// Request for merging events into device state.
message GMergeDeviceStateRequest {
	com.sitewhere.grpc.model.GUUID id = 1;
	com.sitewhere.grpc.model.GDeviceStateEventMergeRequest request = 2;
}
	
// Response for merging events into device state.
message GMergeDeviceStateResponse {
	com.sitewhere.grpc.model.GDeviceState deviceState = 1;
}
	
// Request for deleting device state.
message GDeleteDeviceStateRequest {
	com.sitewhere.grpc.model.GUUID id = 1;
}
	
// Response for deleting device state.
message GDeleteDeviceStateResponse {
	com.sitewhere.grpc.model.GDeviceState deviceState = 1;
}
